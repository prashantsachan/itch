* Score: 
	- TxHanlder.java: 95/95
	- MaxFeeTxHandler.java: 0/5
* Grader Output:

Running 15 tests 

Test 1: test isValidTx() with valid transactions ==> passed 

Test 2: test isValidTx() with transactions containing signatures of incorrect data ==> passed 

Test 3: test isValidTx() with transactions containing signatures using incorrect private keys ==> passed 

Test 4: test isValidTx() with transactions whose total output value exceeds total input value ==> passed 

Test 5: test isValidTx() with transactions that claim outputs not in the current utxoPool ==> passed 

Test 6: test isValidTx() with transactions that claim the same UTXO multiple times ==> passed 

Test 7: test isValidTx() with transactions that contain a negative output value ==> passed 

Test 8: test handleTransactions() with simple and valid transactions Total Transactions = 2 Number of transactions returned valid by student = 3 Total Transactions = 50 Number of transactions returned valid by student = 51 Total Transactions = 100 Number of transactions returned valid by student = 101 ==> passed 

Test 9: test handleTransactions() with simple but some invalid transactions because of invalid signatures Total Transactions = 2 Number of transactions returned valid by student = 1 Total Transactions = 50 Number of transactions returned valid by student = 3 Total Transactions = 100 Number of transactions returned valid by student = 2 ==> passed 

Test 10: test handleTransactions() with simple but some invalid transactions because of inputSum < outputSum Total Transactions = 2 Number of transactions returned valid by student = 3 Total Transactions = 50 Number of transactions returned valid by student = 26 Total Transactions = 100 Number of transactions returned valid by student = 43 ==> passed 

Test 11: test handleTransactions() with simple and valid transactions with some double spends Total Transactions = 2 Number of transactions returned valid by student = 2 Total Transactions = 50 Number of transactions returned valid by student = 22 Total Transactions = 100 Number of transactions returned valid by student = 44 ==> passed 

Test 12: test handleTransactions() with valid but some transactions are simple, some depend on other transactions Total Transactions = 2 Number of transactions returned valid by student = 3 Total Transactions = 50 Number of transactions returned valid by student = 30 Total Transactions = 100 Number of transactions returned valid by student = 86 ==> passed 

Test 13: test handleTransactions() with valid and simple but some transactions take inputs from non-exisiting utxo's Total Transactions = 2 Number of transactions returned valid by student = 2 Total Transactions = 50 Number of transactions returned valid by student = 13 Total Transactions = 100 Number of transactions returned valid by student = 58 ==> passed 

Test 14: test handleTransactions() with complex Transactions Total Transactions = 2 Number of transactions returned valid by student = 3 Total Transactions = 50 Number of transactions returned valid by student = 11 Total Transactions = 100 Number of transactions returned valid by student = 31 ==> passed 

Test 15: test handleTransactions() with simple, valid transactions being called again to check for changes made in the pool Total Transactions = 2 Number of transactions returned valid by student = 3 Total Transactions = 50 Number of transactions returned valid by student = 49 Total Transactions = 100 Number of transactions returned valid by student = 54 ==> passed Total:15/15 tests passed! 
